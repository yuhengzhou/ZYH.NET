var form_submit = function () { $.ajax({ url: "./", type: "POST", dataType: "json", async: false, data: $("form").serialize(), success: function (results) { handleInvalidFields(results); if (results.confirm && confirm(results.confirm)) { $("form").append('<input type="hidden" name="TVH" value="' + results.tvh + '" />'); form_submit() } if (results.url) { parent.postMessage("disableExitCatcher", "*"); eval(results.url) } }, error: function () { alert("There was an unknown error.") } }) }; $(function () { $.each($.browser, function (c) { $("body").addClass(c); return false }); fnHideAllSteps(); var a = window.location.href; if (a.match("ad_group=6142") && a.match("window-price") && a.match("SRC=Source78")) { var b = CheckTraffic(); b.done(function () { if ($.checkSuccess == true) { fnHideAllSteps(); fnShowStepContainer("three"); $.nextStep(); $(".submit_area").show(); $("input[name=firstName]").focus() } else { fnShowStepContainer("one") } }) } else { fnShowStepContainer("one") } if ($("[class*=step]").length <= 1) { $(".submit_area").show() } $("input[name=submit]").bind("click", fnOnSubmit); $("button[name=submit]").bind("click", fnOnSubmit); $("form").bind("submit", function () { return false }) }); function fnOnSubmit(a) { step = $(a.target).val(); if (typeof step === "undefined") { return false } stepSplit = step.split("-"); $.each(stepSplit, function (c, b) { stepSplit[c] = b.charAt(0).toUpperCase() + b.slice(1) }); step = stepSplit.join(""); if (step == "Submit") { return true } if (step == "StepOne") { $('input:text[value=""]:first').attr("autofocus", "autofocus") } method = window["fnFormSubmit" + step] || window["fnSubmit" + step]; method() } function fnHideAllSteps() { $("[class*=step]").hide(); $(".submit_area").hide() } function fnShowStepContainer(a) { $(".step-" + a).fadeIn() } function fnBindEvents() { $("input[name=submit]").bind("click", fnOnSubmit); $("form").bind("submit", function () { return false }) } function fnSubmitStepOne() { fnHideAllSteps(); fnShowStepContainer("two"); $.nextStep() } function fnSubmitStepTwo() { fnHideAllSteps(); $(".submit_area").show(); fnShowStepContainer("three"); $.nextStep(); $("input[name=firstName]").focus() } function fnSubmitStepThree() { fnSubmitForm() } function fnSubmitForm() { $.ajax({ url: "./", type: "POST", dataType: "json", data: $("form").serialize(), success: handleAjaxResponse, error: function () { alert("There was an unknown error, please try again.") } }) } function handleInvalidFields(b) { $(".error_field").removeClass("error_field"); if (b.invalidFields) { for (var a in b.invalidFields) { if (b.invalidFields.hasOwnProperty(a)) { $("." + b.invalidFields[a]).addClass("error_field") } } } if (b.msg) { return false } } function handleAjaxResponse(results) { handleInvalidFields(results); if (results.confirm) { if (confirm(results.confirm)) { $("form").append('<input type="hidden" name="TVH" value="' + results.tvh + '" />'); fnSubmitForm() } } if (results.url) { $.disableExitCatcher(function () { eval(results.url) }) } } var tcpaState; $(function () {
    $(".step-three input").keypress(function (b) { if (b.which == "13") { fnOnSubmit($('input[value="step-three"]').click()); return false } }); var a = $("#tcpa"); if (a.length > 0) {
        a.css("visibility", "hidden"); $(document).on("blur", "input[type=text]",
function (c) {
    if ($(".question.error_field input[name=homePhone]").length > 0) { return false } if ($("input[name=homePhone]").val() && !tcpaState) { var b = $("input[name=homePhone]").val().replace(/[^0-9]/g, ""); if (b.length == 10) { $.ajax({ type: "POST", timeout: 2000, global: false, dataType: "json", data: $("form").serialize() + "&validateTargus=true", success: function (d) { tcpaState = d.showTCPA ? "visible" : "hidden" }, error: function () { tcpaState = "visible" }, complete: function () { $("#tcpa").css("visibility", tcpaState); if ($("#sears-text").length > 0) { var d = tcpaState == "hidden" ? "visible" : "hidden"; $("#sears-text").css("visibility", d) } } }) } else { } } 
})
    } 
}); (function (w, C) { function v() { var e = D.elements; return "string" == typeof e ? e.split(" ") : e } function z(f) { var e = u[f[d]]; e || (e = {}, A++, f[d] = A, u[A] = e); return e } function c(f, e, g) { e || (e = C); if (B) { return e.createElement(f) } g || (g = z(e)); e = g.cache[f] ? g.cache[f].cloneNode() : a.test(f) ? (g.cache[f] = g.createElem(f)).cloneNode() : g.createElem(f); return e.canHaveChildren && !F.test(f) ? g.frag.appendChild(e) : e } function E(f, e) { if (!e.cache) { e.cache = {}, e.createElem = f.createElement, e.createFrag = f.createDocumentFragment, e.frag = e.createFrag() } f.createElement = function (g) { return !D.shivMethods ? e.createElem(g) : c(g, f, e) }; f.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + v().join().replace(/\w+/g, function (g) { e.createElem(g); e.frag.createElement(g); return 'c("' + g + '")' }) + ");return n}")(D, e.frag) } function b(f) { f || (f = C); var e = z(f); if (D.shivCSS && !y && !e.hasCSS) { var h, g = f; h = g.createElement("p"); g = g.getElementsByTagName("head")[0] || g.documentElement; h.innerHTML = "x<style>article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}</style>"; h = g.insertBefore(h.lastChild, g.firstChild); e.hasCSS = !!h } B || E(f, e); return f } var x = w.html5 || {}, F = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, a = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, y, d = "_html5shiv", A = 0, u = {}, B; (function () { try { var f = C.createElement("a"); f.innerHTML = "<xyz></xyz>"; y = "hidden" in f; var e; if (!(e = 1 == f.childNodes.length)) { C.createElement("a"); var h = C.createDocumentFragment(); e = "undefined" == typeof h.cloneNode || "undefined" == typeof h.createDocumentFragment || "undefined" == typeof h.createElement } B = e } catch (g) { B = y = !0 } })(); var D = { elements: x.elements || "abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video", version: "3.6.2pre", shivCSS: !1 !== x.shivCSS, supportsUnknownElements: B, shivMethods: !1 !== x.shivMethods, type: "default", shivDocument: b, createElement: c, createDocumentFragment: function (g, f) { g || (g = C); if (B) { return g.createDocumentFragment() } for (var f = f || z(g), l = f.frag.cloneNode(), k = 0, j = v(), i = j.length; k < i; k++) { l.createElement(j[k]) } return l } }; w.html5 = D; b(C) })(this, document); "use strict"; (function (e, c, a, g) { var d = "emailAutocomplete"; var f = { suggClass: "eac-sugg", domains: ["aol.com", "att.net", "bellsouth.net", "charter.net", "comcast.net", "cox.net", "gmail.com", "gmx.com", "googlemail.com", "hotmail.com", "icloud.com", "live.com", "mac.com", "me.com", "msn.com", "optonline.net", "outlook.com", "rocketmail.com", "sbcglobal.net", "verizon.net", "yahoo.com", "ymail.com"] }; function b(i, h) { this.$field = e(i); this.options = e.extend(true, {}, f, h); this._defaults = f; this._domains = this.options.domains; this.init() } b.prototype = { init: function () { if (!Array.prototype.indexOf) { this.doIndexOf() } this.fieldLeftOffset = (this.$field.outerWidth(true) - this.$field.width()) / 2; var h = e("<div class='eac-input-wrap' />").css({ display: this.$field.css("display"), position: "relative", fontSize: this.$field.css("fontSize") }); this.$field.wrap(h); this.$cval = e("<span class='eac-cval' />").css({ visibility: "hidden", position: "absolute", display: "inline-block", fontFamily: this.$field.css("fontFamily"), fontWeight: this.$field.css("fontWeight"), letterSpacing: this.$field.css("letterSpacing") }).insertAfter(this.$field); var i = (this.$field.outerHeight(true) - this.$field.height()) / 2; this.$suggOverlay = e("<span class='" + this.options.suggClass + "' />").css({ display: "block", "box-sizing": "content-box", lineHeight: this.$field.css("lineHeight"), paddingTop: i + "px", paddingBottom: i + "px", fontFamily: this.$field.css("fontFamily"), fontWeight: this.$field.css("fontWeight"), letterSpacing: this.$field.css("letterSpacing"), position: "absolute", top: 0, left: 0 }).insertAfter(this.$field); this.$field.on("keyup.eac", e.proxy(this.displaySuggestion, this)); this.$field.on("focusout", e.proxy(function () { this.autocomplete() }, this)); this.$field.on("keydown.eac", e.proxy(function (j) { if (j.which === 39 || j.which === 9) { this.autocomplete() } }, this)); this.$suggOverlay.on("mousedown.eac touchstart.eac", e.proxy(this.autocomplete, this)) }, suggest: function (j) { var i = j.split("@"); if (i.length > 1) { j = i.pop(); if (!j.length) { return "" } } else { return "" } var h = this._domains.filter(function (k) { return 0 === k.indexOf(j) }).shift() || ""; return h.replace(j, "") }, autocomplete: function () { if (typeof this.suggestion === "undefined" || this.suggestion.length < 1) { return false } this.$field.val(this.val + this.suggestion); this.$suggOverlay.text(""); this.$cval.text("") }, displaySuggestion: function (i) { this.val = this.$field.val(); this.suggestion = this.suggest(this.val); if (!this.suggestion.length) { this.$suggOverlay.text("") } else { i.preventDefault() } this.$suggOverlay.text(this.suggestion); this.$cval.text(this.val); var h = this.$cval.width(); if (this.$field.outerWidth() > h) { this.$suggOverlay.css("left", this.fieldLeftOffset + h + 1 + "px") } }, doIndexOf: function () { Array.prototype.indexOf = function (h, i) { if (this === g || this === null) { throw new TypeError('"this" is null or not defined') } var j = this.length >>> 0; i = +i || 0; if (Math.abs(i) === Infinity) { i = 0 } if (i < 0) { i += j; if (i < 0) { i = 0 } } for (; i < j; i++) { if (this[i] === h) { return i } } return -1 } } }; e.fn[d] = function (h) { return this.each(function () { if (!e.data(this, "yz_" + d)) { e.data(this, "yz_" + d, new b(this, h)) } }) } })(jQuery, window, document); (function (e) { function g() { var i = document.createElement("input"), h = "onpaste"; i.setAttribute(h, ""); return (typeof i[h] === "function") ? "paste" : "input" } var b = g() + ".mask", d = navigator.userAgent, c = /iphone/i.test(d), a = /android/i.test(d), f; e.mask = { definitions: { "9": "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]" }, dataName: "rawMaskFn", placeholder: "_" }; e.fn.extend({ caret: function (j, h) { var i; if (this.length === 0 || this.is(":hidden")) { return } if (typeof j == "number") { h = (typeof h === "number") ? h : j; return this.each(function () { if (this.setSelectionRange) { this.setSelectionRange(j, h) } else { if (this.createTextRange) { i = this.createTextRange(); i.collapse(true); i.moveEnd("character", h); i.moveStart("character", j); i.select() } } }) } else { if (this[0].setSelectionRange) { j = this[0].selectionStart; h = this[0].selectionEnd } else { if (document.selection && document.selection.createRange) { i = document.selection.createRange(); j = 0 - i.duplicate().moveStart("character", -100000); h = j + i.text.length } } return { begin: j, end: h} } }, unmask: function () { return this.trigger("unmask") }, mask: function (j, n) { var k, i, m, o, l, h; if (!j && this.length > 0) { k = e(this[0]); return k.data(e.mask.dataName)() } n = e.extend({ placeholder: e.mask.placeholder, completed: null }, n); i = e.mask.definitions; m = []; o = h = j.length; l = null; e.each(j.split(""), function (p, q) { if (q == "?") { h--; o = p } else { if (i[q]) { m.push(new RegExp(i[q])); if (l === null) { l = m.length - 1 } } else { m.push(null) } } }); return this.trigger("unmask").each(function () { var y = e(this), t = e.map(j.split(""), function (C, B) { if (C != "?") { return i[C] ? n.placeholder : C } }), A = y.val(); function x(B) { while (++B < h && !m[B]) { } return B } function u(B) { while (--B >= 0 && !m[B]) { } return B } function s(E, B) { var D, C; if (E < 0) { return } for (D = E, C = x(B); D < h; D++) { if (m[D]) { if (C < h && m[D].test(t[C])) { t[D] = t[C]; t[C] = n.placeholder } else { break } C = x(C) } } w(); y.caret(Math.max(l, E)) } function p(F) { var D, E, B, C; for (D = F, E = n.placeholder; D < h; D++) { if (m[D]) { B = x(D); C = t[D]; t[D] = E; if (B < h && m[B].test(C)) { E = C } else { break } } } } function v(E) { var C = E.which, F, D, B; if (C === 8 || C === 46 || (c && C === 127)) { F = y.caret(); D = F.begin; B = F.end; if (B - D === 0) { D = C !== 46 ? u(D) : (B = x(D - 1)); B = C === 46 ? x(B) : B } q(D, B); s(D, B - 1); E.preventDefault() } else { if (C == 27) { y.val(A); y.caret(0, r()); E.preventDefault() } } } function z(E) { var B = E.which, G = y.caret(), D, F, C; if (E.ctrlKey || E.altKey || E.metaKey || B < 32) { return } else { if (B) { if (G.end - G.begin !== 0) { q(G.begin, G.end); s(G.begin, G.end - 1) } D = x(G.begin - 1); if (D < h) { F = String.fromCharCode(B); if (m[D].test(F)) { p(D); t[D] = F; w(); C = x(D); if (a) { setTimeout(e.proxy(e.fn.caret, y, C), 0) } else { y.caret(C) } if (n.completed && C >= h) { n.completed.call(y) } } } E.preventDefault() } } } function q(D, B) { var C; for (C = D; C < B && C < h; C++) { if (m[C]) { t[C] = n.placeholder } } } function w() { y.val(t.join("")) } function r(C) { var F = y.val(), E = -1, B, D; for (B = 0, pos = 0; B < h; B++) { if (m[B]) { t[B] = n.placeholder; while (pos++ < F.length) { D = F.charAt(pos - 1); if (m[B].test(D)) { t[B] = D; E = B; break } } if (pos > F.length) { break } } else { if (t[B] === F.charAt(pos) && B !== o) { pos++; E = B } } } if (C) { w() } else { if (E + 1 < o) { y.val(""); q(0, h) } else { w(); y.val(y.val().substring(0, E + 1)) } } return (o ? B : l) } y.data(e.mask.dataName, function () { return e.map(t, function (C, B) { return m[B] && C != n.placeholder ? C : null }).join("") }); if (!y.attr("readonly")) { y.one("unmask", function () { y.unbind(".mask").removeData(e.mask.dataName) }).bind("focus.mask", function () { clearTimeout(f); var C, B; A = y.val(); C = r(); f = setTimeout(function () { w(); if (C == j.length) { y.caret(0, C) } else { y.caret(C) } }, 10) }).bind("blur.mask", function () { r(); if (y.val() != A) { y.change() } }).bind("keydown.mask", v).bind("keypress.mask", z).bind(b, function () { setTimeout(function () { var B = r(true); y.caret(B); if (n.completed && B == y.val().length) { n.completed.call(y) } }, 0) }) } r() }) } }) })(jQuery); (function (a) { if (typeof define === "function" && define.amd) { define(["jquery"], a) } else { if (typeof exports === "object") { a(require("jquery")) } else { a(jQuery) } } } (function (c) { var b = "tinyscrollbar", d = { axis: "y", wheel: true, wheelSpeed: 40, wheelLock: true, scrollInvert: false, trackSize: false, thumbSize: false }; function a(p, h) { this.options = c.extend({}, d, h); this._defaults = d; this._name = b; var o = this, f = p.find(".viewport"), u = p.find(".overview"), s = p.find(".scrollbar"), j = s.find(".track"), n = s.find(".thumb"), x = 0, k = this.options.axis === "x", y = ("ontouchstart" in document.documentElement), w = ("onwheel" in document || document.documentMode >= 9) ? "wheel" : (document.onmousewheel !== undefined ? "mousewheel" : "DOMMouseScroll"), l = k ? "width" : "height", m = k ? "left" : "top"; this.contentPosition = 0; this.viewportSize = 0; this.contentSize = 0; this.contentRatio = 0; this.trackSize = 0; this.trackRatio = 0; this.thumbSize = 0; this.thumbPosition = 0; function e() { o.update(); q(); return o } this.update = function (z) { var A = l.charAt(0).toUpperCase() + l.slice(1).toLowerCase(); this.viewportSize = f[0]["offset" + A]; this.contentSize = u[0]["scroll" + A]; this.contentRatio = this.viewportSize / this.contentSize; this.trackSize = this.options.trackSize || this.viewportSize; this.thumbSize = Math.min(this.trackSize, Math.max(0, (this.options.thumbSize || (this.trackSize * this.contentRatio)))); this.trackRatio = this.options.thumbSize ? (this.contentSize - this.viewportSize) / (this.trackSize - this.thumbSize) : (this.contentSize / this.trackSize); x = j.offset().top; s.toggleClass("disable", this.contentRatio >= 1); switch (z) { case "bottom": this.contentPosition = this.contentSize - this.viewportSize; break; case "relative": this.contentPosition = Math.min(Math.max(this.contentSize - this.viewportSize, 0), Math.max(0, this.contentPosition)); break; default: this.contentPosition = parseInt(z, 10) || 0 } t(); return o }; function t() { n.css(m, o.contentPosition / o.trackRatio); u.css(m, -o.contentPosition); s.css(l, o.trackSize); j.css(l, o.trackSize); n.css(l, o.thumbSize) } function q() { if (y) { f[0].ontouchstart = function (z) { if (1 === z.touches.length) { z.stopPropagation(); i(z.touches[0]) } } } else { n.bind("mousedown", i); j.bind("mousedown", r) } c(window).resize(function () { o.update("relative") }); if (o.options.wheel && window.addEventListener) { p[0].addEventListener(w, v, false) } else { if (o.options.wheel) { p[0].onmousewheel = v } } } function i(z) { c("body").addClass("noSelect"); x = k ? z.pageX : z.pageY; o.thumbPosition = parseInt(n.css(m), 10) || 0; if (y) { document.ontouchmove = function (A) { A.preventDefault(); r(A.touches[0]) }; document.ontouchend = g } else { c(document).bind("mousemove", r); c(document).bind("mouseup", g); n.bind("mouseup", g) } } function v(B) { if (o.contentRatio < 1) { var A = B || window.event, C = "delta" + o.options.axis.toUpperCase(), z = -(A[C] || A.detail || (-1 / 3 * A.wheelDelta)) / 40; o.contentPosition -= z * o.options.wheelSpeed; o.contentPosition = Math.min((o.contentSize - o.viewportSize), Math.max(0, o.contentPosition)); p.trigger("move"); n.css(m, o.contentPosition / o.trackRatio); u.css(m, -o.contentPosition); if (o.options.wheelLock || (o.contentPosition !== (o.contentSize - o.viewportSize) && o.contentPosition !== 0)) { A = c.event.fix(A); A.preventDefault() } } } function r(B) { if (o.contentRatio < 1) { var z = k ? B.pageX : B.pageY, C = z - x; if (o.options.scrollInvert && y) { C = x - z } var A = Math.min((o.trackSize - o.thumbSize), Math.max(0, o.thumbPosition + C)); o.contentPosition = A * o.trackRatio; p.trigger("move"); n.css(m, A); u.css(m, -o.contentPosition) } } function g() { c("body").removeClass("noSelect"); c(document).unbind("mousemove", r); c(document).unbind("mouseup", g); n.unbind("mouseup", g); document.ontouchmove = document.ontouchend = null } return e() } c.fn[b] = function (e) { return this.each(function () { if (!c.data(this, "plugin_" + b)) { c.data(this, "plugin_" + b, new a(c(this), e)) } }) } })); $.ajaxSetup({ cache: true }); $.step = 1; $.nextStep = function (a, b) { $.step++; pm({ target: parent, type: "site", data: { method: "changeStep", step: $.step }, success: function (c) { if (typeof a === "function") { a(c) } }, error: function (c) { if (typeof b === "function") { b(c) } } }) }; $.previousStep = function (a, b) { $.step--; pm({ target: parent, type: "site", data: { method: "changeStep", step: $.step }, success: function (c) { if (typeof a === "function") { a(c) } }, error: function (c) { if (typeof b === "function") { b(c) } } }) }; $.redirect = function (c, a, b) { pm({ target: parent, type: "site", data: { method: "redirect", url: c }, success: function (d) { if (typeof a === "function") { a(d) } }, error: function (d) { if (typeof b === "function") { b(d) } } }) }; $.disableExitCatcher = function (a, b) { pm({ target: parent, type: "site", data: { method: "disableExitCatcher" }, success: function (c) { if (typeof a === "function") { a(c) } }, error: function (c) { if (typeof b === "function") { b(c) } } }) }; $.postMessage = function (c, a, b) { pm({ target: parent, type: "site", data: c, success: function (d) { if (typeof a === "function") { a(d) } }, error: function (d) { if (typeof b === "function") { b(d) } } }) }; $.ajaxSetup({ cache: true }); $.FormHeightChange = function (c, a, b) { pm({ target: parent, type: "site", data: { method: "FormHeightChange", formHeight: c }, success: function (d) { if (typeof a === "function") { a(d) } }, error: function (d) { if (typeof b === "function") { b(d) } } }) }; $.GoToStepThree = function (c, a, b) { pm({ target: parent, type: "site", data: { method: "GoToStepThree", formHeight: c }, success: function (d) { if (typeof a === "function") { a(d) } }, error: function (d) { if (typeof b === "function") { b(d) } } }) }; $.GoToStepFour = function (c, d, a, b) { pm({ target: parent, type: "site", data: { method: "GoToStepFour", formHeight: c, windowMeasurements: d }, success: function (e) { if (typeof a === "function") { a(e) } }, error: function (e) { if (typeof b === "function") { b(e) } } }) }; $.LightboxClick = function (c, a, b) { pm({ target: parent, type: "site", data: { method: "LightboxClick", id: c }, success: function (d) { if (typeof a === "function") { a(d) } }, error: function (d) { if (typeof b === "function") { b(d) } } }) }; var NO_JQUERY = {}; (function (b, d, e) { if (!("console" in b)) { var f = b.console = {}; f.log = f.warn = f.error = f.debug = function () { } } if (d === NO_JQUERY) { d = { fn: {}, extend: function () { var h = arguments[0]; for (var j = 1, g = arguments.length; j < g; j++) { var c = arguments[j]; for (var k in c) { h[k] = c[k] } } return h } } } d.fn.pm = function () { console.log("usage: \nto send:    $.pm(options)\nto receive: $.pm.bind(type, fn, [origin])"); return this }; d.pm = b.pm = function (c) { a.send(c) }; d.pm.bind = b.pm.bind = function (h, g, c, i, j) { a.bind(h, g, c, i, j === true) }; d.pm.unbind = b.pm.unbind = function (g, c) { a.unbind(g, c) }; d.pm.origin = b.pm.origin = null; d.pm.poll = b.pm.poll = 200; var a = { send: function (c) { var i = d.extend({}, a.defaults, c), g = i.target; if (!i.target) { console.warn("postmessage target window required"); return } if (!i.type) { console.warn("postmessage type required"); return } var h = { data: i.data, type: i.type }; if (i.success) { h.callback = a._callback(i.success) } if (i.error) { h.errback = a._callback(i.error) } if (("postMessage" in g) && !i.hash) { a._bind(); g.postMessage(JSON.stringify(h), i.origin || "*") } else { a.hash._bind(); a.hash.send(i, h) } }, bind: function (h, g, c, i, j) { a._replyBind(h, g, c, i, j) }, _replyBind: function (j, i, g, m, k) { if (("postMessage" in b) && !m) { a._bind() } else { a.hash._bind() } var c = a.data("listeners.postmessage"); if (!c) { c = {}; a.data("listeners.postmessage", c) } var h = c[j]; if (!h) { h = []; c[j] = h } h.push({ fn: i, callback: k, origin: g || d.pm.origin }) }, unbind: function (p, n) { var h = a.data("listeners.postmessage"); if (h) { if (p) { if (n) { var k = h[p]; if (k) { var g = []; for (var j = 0, c = k.length; j < c; j++) { var q = k[j]; if (q.fn !== n) { g.push(q) } } h[p] = g } } else { delete h[p] } } else { for (var j in h) { delete h[j] } } } }, data: function (g, c) { if (c === e) { return a._data[g] } a._data[g] = c; return c }, _data: {}, _CHARS: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), _random: function () { var g = []; for (var c = 0; c < 32; c++) { g[c] = a._CHARS[0 | Math.random() * 32] } return g.join("") }, _callback: function (g) { var c = a.data("callbacks.postmessage"); if (!c) { c = {}; a.data("callbacks.postmessage", c) } var h = a._random(); c[h] = g; return h }, _bind: function () { if (!a.data("listening.postmessage")) { if (b.addEventListener) { b.addEventListener("message", a._dispatch, false) } else { if (b.attachEvent) { b.attachEvent("onmessage", a._dispatch) } } a.data("listening.postmessage", 1) } }, _dispatch: function (q) { try { var h = JSON.parse(q.data) } catch (r) { console.warn("postmessage data invalid json: ", r); return } if (!h.type) { console.warn("postmessage message type required"); console.log(h); return } var n = a.data("callbacks.postmessage") || {}, k = n[h.type]; if (k) { k(h.data) } else { var j = a.data("listeners.postmessage") || {}; var t = j[h.type] || []; for (var m = 0, p = t.length; m < p; m++) { var g = t[m]; if (g.origin && g.origin !== "*" && q.origin !== g.origin) { console.warn("postmessage message origin mismatch", q.origin, g.origin); if (h.errback) { var s = { message: "postmessage origin mismatch", origin: [q.origin, g.origin] }; a.send({ target: q.source, data: s, type: h.errback }) } continue } function c(i) { if (h.callback) { a.send({ target: q.source, data: i, type: h.callback }) } } try { if (g.callback) { g.fn(h.data, c, q) } else { c(g.fn(h.data, q)) } } catch (r) { if (h.errback) { a.send({ target: q.source, data: r, type: h.errback }) } else { throw r } } } } } }; a.hash = { send: function (r, c) { var o = r.target, g = r.url; if (!g) { console.warn("postmessage target window url is required"); return } g = a.hash._url(g); var h, q = a.hash._url(b.location.href); if (b == o.parent) { h = "parent" } else { try { for (var j = 0, l = parent.frames.length; j < l; j++) { var k = parent.frames[j]; if (k == b) { h = j; break } } } catch (m) { h = b.name } } if (h == null) { console.warn("postmessage windows must be direct parent/child windows and the child must be available through the parent window.frames list"); return } var n = { "x-requested-with": "postmessage", source: { name: h, url: q }, postmessage: c }; var p = "#x-postmessage-id=" + a._random(); o.location = g + p + encodeURIComponent(JSON.stringify(n)) }, _regex: /^\#x\-postmessage\-id\=(\w{32})/, _regex_len: "#x-postmessage-id=".length + 32, _bind: function () { if (!a.data("polling.postmessage")) { setInterval(function () { var g = "" + b.location.hash, c = a.hash._regex.exec(g); if (c) { var h = c[1]; if (a.hash._last !== h) { a.hash._last = h; a.hash._dispatch(g.substring(a.hash._regex_len)) } } }, d.pm.poll || 200); a.data("polling.postmessage", 1) } }, _dispatch: function (p) { if (!p) { return } try { p = JSON.parse(decodeURIComponent(p)); if (!(p["x-requested-with"] === "postmessage" && p.source && p.source.name != null && p.source.url && p.postmessage)) { return } } catch (s) { return } var h = p.postmessage, q = a.data("callbacks.postmessage") || {}, k = q[h.type]; if (k) { k(h.data) } else { var m; if (p.source.name === "parent") { m = b.parent } else { m = b.frames[p.source.name] } var j = a.data("listeners.postmessage") || {}; var v = j[h.type] || []; for (var n = 0, r = v.length; n < r; n++) { var g = v[n]; if (g.origin) { var u = /https?\:\/\/[^\/]*/.exec(p.source.url)[0]; if (g.origin !== "*" && u !== g.origin) { console.warn("postmessage message origin mismatch", u, g.origin); if (h.errback) { var t = { message: "postmessage origin mismatch", origin: [u, g.origin] }; a.send({ target: m, data: t, type: h.errback, hash: true, url: p.source.url }) } continue } } function c(i) { if (h.callback) { a.send({ target: m, data: i, type: h.callback, hash: true, url: p.source.url }) } } try { if (g.callback) { g.fn(h.data, c) } else { c(g.fn(h.data)) } } catch (s) { if (h.errback) { a.send({ target: m, data: s, type: h.errback, hash: true, url: p.source.url }) } else { throw s } } } } }, _url: function (c) { return ("" + c).replace(/#.*$/, "") } }; d.extend(a, { defaults: { target: null, url: null, type: null, data: null, success: null, error: null, origin: "*", hash: false} }) })(this, typeof jQuery === "undefined" ? NO_JQUERY : jQuery); if (!("JSON" in window && window.JSON)) { JSON = {} } (function () { function f(n) { return n < 10 ? "0" + n : n } if (typeof Date.prototype.toJSON !== "function") { Date.prototype.toJSON = function (key) { return this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" }; String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function (key) { return this.valueOf() } } var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, rep; function quote(string) { escapable.lastIndex = 0; return escapable.test(string) ? '"' + string.replace(escapable, function (a) { var c = meta[a]; return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + string + '"' } function str(key, holder) { var i, k, v, length, mind = gap, partial, value = holder[key]; if (value && typeof value === "object" && typeof value.toJSON === "function") { value = value.toJSON(key) } if (typeof rep === "function") { value = rep.call(holder, key, value) } switch (typeof value) { case "string": return quote(value); case "number": return isFinite(value) ? String(value) : "null"; case "boolean": case "null": return String(value); case "object": if (!value) { return "null" } gap += indent; partial = []; if (Object.prototype.toString.apply(value) === "[object Array]") { length = value.length; for (i = 0; i < length; i += 1) { partial[i] = str(i, value) || "null" } v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]"; gap = mind; return v } if (rep && typeof rep === "object") { length = rep.length; for (i = 0; i < length; i += 1) { k = rep[i]; if (typeof k === "string") { v = str(k, value); if (v) { partial.push(quote(k) + (gap ? ": " : ":") + v) } } } } else { for (k in value) { if (Object.hasOwnProperty.call(value, k)) { v = str(k, value); if (v) { partial.push(quote(k) + (gap ? ": " : ":") + v) } } } } v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}"; gap = mind; return v } } if (typeof JSON.stringify !== "function") { JSON.stringify = function (value, replacer, space) { var i; gap = ""; indent = ""; if (typeof space === "number") { for (i = 0; i < space; i += 1) { indent += " " } } else { if (typeof space === "string") { indent = space } } rep = replacer; if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) { throw new Error("JSON.stringify") } return str("", { "": value }) } } if (typeof JSON.parse !== "function") { JSON.parse = function (text, reviver) { var j; function walk(holder, key) { var k, v, value = holder[key]; if (value && typeof value === "object") { for (k in value) { if (Object.hasOwnProperty.call(value, k)) { v = walk(value, k); if (v !== undefined) { value[k] = v } else { delete value[k] } } } } return reviver.call(holder, key, value) } cx.lastIndex = 0; if (cx.test(text)) { text = text.replace(cx, function (a) { return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) } if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) { j = eval("(" + text + ")"); return typeof reviver === "function" ? walk({ "": j }, "") : j } throw new SyntaxError("JSON.parse") } } } ()); var checkingTraffic = false; function CheckTraffic() { try { if (checkingTraffic) { return } else { checkingTraffic = true; ajaxRequest = $.ajax({ url: "./traffic", type: "POST", dataType: "json", data: $("form").serialize(), success: function (c) { try { if (c.error_fields) { $(".error_field").removeClass("error_field"); for (var b in c.error_fields) { if (c.error_fields.hasOwnProperty(b)) { $("." + c.error_fields[b]).addClass("error_field") } } } if (c.msg) { return false } if (c.url && c.url != "") { $.disableExitCatcher(function () { window.parent.location = c.url }); throw "err" } else { var f = c.city + ", " + c.state; $.postMessage({ method: "setgeo", geo: f }); var e = $(".formatted_address"); e.html(e.html().replace("[zip]", f).replace("[zipcity]", c.city).replace("[zipstate]", c.state)); $(".city-value-autocomplete").val(c.city); $(".state-value-autocomplete").val(c.state); $(".error_field").removeClass("error_field") } if (c.xsrf) { $('input[name="xsrfToken"]').val(c.xsrf) } $.checkSuccess = true; fnAsyncCheckLeadValues() } catch (d) { $.checkSuccess = false } }, error: function () { $.checkSuccess = false; alert("There was an unknown error."); throw "err" } }); checkingTraffic = false; return ajaxRequest } } catch (a) { } } function fnAsyncCheckLeadValues(b) { try { ajaxRequest = $.ajax({ url: "./ping", type: "POST", dataType: "json", data: $("form").serialize(), timeout: 12000, async: true, success: function (c) { try { if (c.pingLeadId) { $("form").append('<input type="hidden" name="pingLeadId" value="' + c.pingLeadId + '" />') } if (c.nextStep) { $("form").append('<input type="hidden" name="nextStep" value="' + c.nextStep + '" />') } if (c.leadValue) { $("form").append('<input type="hidden" name="leadValue" value="' + c.leadValue + '" />') } if (c.xsrf) { $('input[name="xsrfToken"]').val(c.xsrf) } } catch (d) { } }, error: function () { alert("There was an unknown error."); throw "err" } }); return ajaxRequest } catch (a) { } };